#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mouse-left-click {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
        };

        mouse-right-click {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
        };

        mouse-scroll {
            bindings = <&mo 5>;
            key-positions = <16 17 18>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <12 13>;
        };

        left-control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W     &kp E       &kp R             &kp T                                  &kp Y         &kp U  &kp I      &kp O       &kp P
&kp A             &kp S     &kp D       &kp F             &kp G                                  &kp H         &kp J  &kp K      &kp L       &kp SEMICOLON
&kp Z             &kp X     &kp C       &kp V             &kp B                                  &kp N         &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&lt 1 LANGUAGE_1  &kp LALT  &kp LSHIFT  &kp LEFT_COMMAND  &kp SPACE  &kp TAB      &kp BACKSPACE  &kp KP_ENTER                                &lt 2 LANGUAGE_2
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&trans           &kp F5       &kp F6    &kp F7      &kp F8                           &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6          &kp ASTERISK           &kp LC(Q)
&trans           &kp F1       &kp F2    &kp F3      &kp F4                           &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3          &kp RIGHT_BRACE        &kp LC(LS(C))
&trans           &trans       &trans    &trans      &trans       &trans      &trans  &kp NUMBER_0                                                              &kp PERIOD
            >;
        };

        NUMBER {
            bindings = <
&kp N1     &kp N2     &kp N3        &kp NUMBER_4     &kp N5                               &kp N6          &kp N7                &kp N8                 &kp N9    &kp N0
&kp AT     &kp HASH   &kp ASTERISK  &kp PLUS         &kp EQUAL                            &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI  &kp LC(Q)
&kp GRAVE  &kp TILDE  &kp MINUS     &kp EXCLAMATION  &kp QUESTION                         &kp PIPE        &kp LBKT              &kp RBKT               &kp SQT   &kp LC(LS(C))
&trans     &trans     &trans        &trans           &trans        &trans      &kp COMMA  &kp PERIOD                                                             &kp ESC
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                       &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                      &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                       &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &kp BACKSPACE                                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &kp ENTER  &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &kp LS(LG(N5))  &kp LS(LG(N4))      &kp LC(DOWN)  &kp LC(UP_ARROW)                          &trans
            >;
        };

        CONFIG {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &bootloader  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans                               &trans
            >;
        };
    };
};
